{"ast":null,"code":"// Trong bài tập này sẽ xử dụng Jquery và JavaScript, JavaScript để thực hiện chức năng quản lý nhân viên, tương ứng với bảng Account trong DB TestingSystem, Các chức năng: Thêm, Sửa, Xóa. Dữ liệu này sẽ tương tác với server Backend API.\n// Khai báo 1 array để lưu thông tin tất cả các Account trên hệ thống.\nvar listAccount = [];\nvar listDepartment = [];\nvar listPossition = [];\nvar currentPage = 1;\nvar size = 5;\nvar totalPages;\nvar sortField = \"id\";\nvar isAsc = true;\n\nfunction getListEmployees() {\n  var url = \"http://localhost:8080/api/v1/accounts/\";\n  url += \"?page=\" + currentPage + \"&size=\" + size;\n  url += \"&sort=\" + sortField + \",\" + (isAsc ? \"asc\" : \"desc\");\n  var search = $(\"#input-search-department\").val();\n\n  if (search) {\n    url += \"&search=\" + search;\n  }\n\n  $.ajax({\n    url: url,\n    type: \"GET\",\n    contentType: \"application/json\",\n    dataType: \"json\",\n    // datatype return\n    beforeSend: function (xhr) {\n      xhr.setRequestHeader(\"Authorization\", \"Basic \" + btoa(localStorage.getItem(\"USERNAME\") + \":\" + localStorage.getItem(\"PASSWORD\")));\n    },\n    success: function (data, textStatus, xhr) {\n      // reset list employees\n      listAccount = [];\n      parseData(data);\n      showAccount();\n      totalPages = data.totalPages; // Sau khi hiển thị dữ liệu sẽ Show thêm các nút để thực hiện phân trang, tính các nút này dựa trên API totalPages được trả ra\n\n      pagingTable(totalPages);\n    },\n\n    error(jqXHR, textStatus, errorThrown) {\n      console.log(jqXHR);\n      console.log(textStatus);\n      console.log(errorThrown);\n    }\n\n  });\n}\n\n$(function () {\n  // Gọi hàm load dữ liệu từ Server API khi load trang\n  getListEmployees();\n  getListDepartment();\n  getListPossition(); // Hàm thực thi khi load đầy đủ các thành phần html\n\n  $(\"#Cretate_Date_ID\").attr(\"disabled\", \"disabled\");\n  $(\"#ID_ID\").attr(\"disabled\", \"disabled\"); // Xử lý sự kiện cho nút reset, Sử dụng JQuery để lấy các giá trị các trường theo ID, sau đó Set về rỗng\n\n  $(\"#reset_btn\").click(function () {\n    $(\"#ID_ID\").val(\"\");\n    $(\"#Email_ID\").val(\"\");\n    $(\"#Username_ID\").val(\"\");\n    $(\"#Fullname_ID\").val(\"\");\n    $(\"#Department_ID\").val(\"\");\n    $(\"#Position_ID\").val(\"\");\n    $(\"#Cretate_Date_ID\").val(\"\");\n  }); // Xử lý sự kiện khi nhấn nút Save\n\n  $(\"#Main_Form_ID\").submit(function () {\n    // Xử lý sự kiện khi nhấn nút Submit của Form(Save), ở đây phải sử dụng Return False ở cuối sự kiện này để không redirect sang trang mới.\n    // Lấy các giá trị người dùng nhập vào\n    var v_ID_ID = $(\"#ID_ID\").val();\n    var v_Email_ID = $(\"#Email_ID\").val();\n    var v_Username_ID = $(\"#Username_ID\").val();\n    var v_Fullname_ID = $(\"#Fullname_ID\").val();\n    var v_Department_ID = $(\"#Department_ID\").val(); // lấy id sẵn rồi\n\n    var v_Position_ID = $(\"#Position_ID\").val(); // Validate cho các giá trị nhập vào gôm: Email, Username, Fullnaem. Department, Possition\n\n    if (!v_Email_ID || v_Email_ID.length < 6 || v_Email_ID.length > 50) {\n      // show error message\n      alert(\"Email name must be from 6 to 50 characters!\");\n      return false;\n    }\n\n    if (!v_Username_ID || v_Username_ID.length < 6 || v_Username_ID.length > 50) {\n      // show error message\n      alert(\"Username name must be from 6 to 50 characters!\");\n      return false;\n    }\n\n    if (!v_Fullname_ID || v_Fullname_ID.length < 6 || v_Fullname_ID.length > 50) {\n      // show error message\n      alert(\"Fullname name must be from 6 to 50 characters!\");\n      return false;\n    }\n\n    if (!v_Department_ID || v_Department_ID == \"--Select a Department--\") {\n      // show error message\n      alert(\"Pls choose Department!\");\n      return false;\n    }\n\n    if (!v_Position_ID || v_Position_ID == \"--Select a Position--\") {\n      // show error message\n      alert(\"Pls choose Possition!\");\n      return false;\n    } //var v_Cretate_Date_ID = $(\"#Cretate_Date_ID\").val();\n    // sua lai chuc nang tao moi Account\n    // themthuoocj tính value rồi, khong cần đoạn này\n    // -> dùng luôn v_postion_id chứ không cần duyệt mảng tìm lại id\n\n    /*\n    for (let index = 0; index < listDepartment.length; index++) {\n      if (listDepartment[index].name == v_Department_ID) {\n        var depID = listDepartment[index].id;\n      }\n    }\n    for (let index = 0; index < listPossition.length; index++) {\n      if (listPossition[index].name == v_Position_ID) {\n        var posID = listPossition[index].id;\n      }\n    }\n    */\n\n\n    var account = {\n      email: v_Email_ID,\n      username: v_Username_ID,\n      //\n      fullname: v_Fullname_ID,\n      departmentId: v_Department_ID,\n      positionId: v_Position_ID //CreateDate: v_Cretate_Date_ID,\n\n    }; // check Email da ton tai tren he thong hay chua?\n\n    $.ajax({\n      url: \"http://localhost:8080/api/v1/accounts/EmailExists/\" + v_Email_ID,\n      type: \"GET\",\n      contentType: \"application/json\",\n      dataType: \"json\",\n      // datatype return\n      beforeSend: function (xhr) {\n        xhr.setRequestHeader(\"Authorization\", \"Basic \" + btoa(localStorage.getItem(\"USERNAME\") + \":\" + localStorage.getItem(\"PASSWORD\")));\n      },\n      success: function (data, textStatus, xhr) {\n        if (data) {\n          alert(\"Email đã tồn tại trên hệ thống\");\n          return false;\n        } else {\n          //\n          // Check Username đã có trên hệ thống hay chưa?\n          $.ajax({\n            url: \"http://localhost:8080/api/v1/accounts/UsernameExists/\" + v_Username_ID,\n            type: \"GET\",\n            contentType: \"application/json\",\n            dataType: \"json\",\n            // datatype return\n            beforeSend: function (xhr) {\n              xhr.setRequestHeader(\"Authorization\", \"Basic \" + btoa(localStorage.getItem(\"USERNAME\") + \":\" + localStorage.getItem(\"PASSWORD\")));\n            },\n            success: function (data, textStatus, xhr) {\n              if (data) {\n                alert(\"Username đã tồn tại trên hệ thống\");\n                return false;\n              } else {\n                // add Account voi Mock API\n                console.log(v_Department_ID);\n                console.log(JSON.stringify(account));\n                console.log(v_ID_ID);\n                console.log(\"http://localhost:8080/api/v1/accounts/\" + v_ID_ID);\n                $.ajax({\n                  url: \"http://localhost:8080/api/v1/accounts/\",\n                  type: \"POST\",\n                  data: JSON.stringify(account),\n                  // body\n                  contentType: \"application/json\",\n                  // type of body (json, xml, text)\n                  beforeSend: function (xhr) {\n                    xhr.setRequestHeader(\"Authorization\", \"Basic \" + btoa(localStorage.getItem(\"USERNAME\") + \":\" + localStorage.getItem(\"PASSWORD\")));\n                  },\n                  success: function (data, textStatus, xhr) {\n                    currentPage = totalPages;\n                    getListEmployees();\n                  },\n\n                  error(jqXHR, textStatus, errorThrown) {\n                    alert(\"Error when loading data\");\n                    console.log(jqXHR);\n                    console.log(textStatus);\n                    console.log(errorThrown);\n                  }\n\n                });\n              }\n            },\n\n            error(jqXHR, textStatus, errorThrown) {\n              console.log(jqXHR);\n              console.log(textStatus);\n              console.log(errorThrown);\n            }\n\n          });\n        }\n      },\n\n      error(jqXHR, textStatus, errorThrown) {\n        console.log(jqXHR);\n        console.log(textStatus);\n        console.log(errorThrown);\n      }\n\n    }); // Tạo 1 đối tượng account để lưu giữ thông tin nhận được, bỏ giá trị ID vì đã nhận giá trị tự động tăng từ Server\n    // console.log(account);\n    // Add account tới MOCK API\n    //$.ajax({\n    // type: \"POST\",\n    // url: \"http://localhost:8080/api/v1/accounts/\",\n    // data: JSON.stringify(account),\n    // contentType: \"application/json; charset=UTF-8\",\n    //success: function (data, status) {\n    // console.log(status);\n    // error\n    // if (status == \"error\") {\n    //    alert(\"Error when loading data\");\n    //   return;\n    //  }\n    // success\n    // Hàm này để hiển thị thông tin account ở table\n    //   getListEmployees();\n    // },\n    // });\n\n    return false; // Sử dụng return false để không redirect tới 1 trang khác.\n  });\n}); // Đoạn bên trên khi load hoàn chỉnh trang web sẽ kết thúc ở đây, đoạn dưới sẽ viết các hàm bổ trợ khác\n// Viết hàm showAccount()\n\nfunction showAccount() {\n  // thừa 1 chữ r : removeAttrr -> removeAttr\n  $(\"#Email_ID\").removeAttr(\"disabled\");\n  $(\"#Username_ID\").removeAttr(\"disabled\"); // Xóa hết kết quả đang hiển thị ở bảng kết quả\n\n  $(\"#Result_TB\").empty(); // Lặp trong listAccount để in thông tin từng phần tử\n  // Hiển thị thêm 2 nút để sửa và xóa các Account\n\n  for (var index = 0; index < listAccount.length; index++) {\n    $(\"#Result_TB\").append(`\n              <tr>\n              <th>${listAccount[index].AccountID}</th>\n              <th>${listAccount[index].Email}</th>\n              <th>${listAccount[index].Username}</th>\n              <th>${listAccount[index].FullName}</th>\n              <th>${listAccount[index].Department}</th>\n              <th>${listAccount[index].Position}</th>   \n              <th>${listAccount[index].CreateDate}</th>\n              <th><button class=\"btn btn-warning\" onclick=\"editAccount(${index})\">Edit</button></th>\n              <th><button class=\"btn btn-warning\" onclick=\"deleteAccount(${index})\">Delete</button></th>\n              </tr>\n              `);\n  }\n} // Viết hàm xóa account\n\n\nfunction deleteAccount(Index) {\n  var v_del_ID = listAccount[Index].AccountID;\n  console.log(v_del_ID); // Hiển thị 1 Confim Popup, chọn Có = True\n\n  var confirm_del = confirm(\"Bạn có chắc chắn muốn xóa Account này không\");\n\n  if (confirm_del) {\n    $.ajax({\n      url: \"http://localhost:8080/api/v1/accounts/\" + v_del_ID,\n      type: \"DELETE\",\n      beforeSend: function (xhr) {\n        xhr.setRequestHeader(\"Authorization\", \"Basic \" + btoa(localStorage.getItem(\"USERNAME\") + \":\" + localStorage.getItem(\"PASSWORD\")));\n      },\n      success: function (data) {\n        window.location.reload();\n      },\n\n      error(jqXHR, textStatus, errorThrown) {\n        console.log(jqXHR);\n        console.log(textStatus);\n        console.log(errorThrown);\n      }\n\n    });\n  } else {\n    return;\n  }\n} // Viết hàm để Edit các account\n\n\nfunction editAccount(Index) {\n  $(\"#ID_ID\").val(listAccount[Index].AccountID);\n  $(\"#Email_ID\").attr(\"disabled\", \"disabled\");\n  $(\"#Username_ID\").val(listAccount[Index].Username); // index -> Index\n\n  $(\"#Fullname_ID\").val(listAccount[Index].FullName);\n  $(\"#Department_ID\").val(listAccount[Index].Department);\n  $(\"#Position_ID\").val(listAccount[Index].Position);\n  $(\"#Cretate_Date_ID\").attr(\"disabled\", \"disabled\"); //  Xử lý sự kiện khi click vào nút Update\n\n  $(\"#update_btn\").click(function () {\n    var v_ID_ID = $(\"#ID_ID\").val(); // var v_Email_ID = $(\"#Email_ID\").val();\n    //var v_Username_ID = $(\"#Username_ID\").val();\n\n    var v_Fullname_ID = $(\"#Fullname_ID\").val(); // var v_Fullname_ID = $(\"#Fullname_ID\").val(); //thưuaf\n    // lấy id luôn rồi -- (là thuộc tính value trong thẻ option)\n\n    var v_Department_ID = $(\"#Department_ID\").val();\n    var v_Position_ID = $(\"#Position_ID\").val(); // lay  ra  ID  của  Department khi nguoi dung lua chon phong ban\n    // có thuộc tính value rồi, không cần đoạn này\n\n    /*\n    for (let index = 0; index < listDepartment.length; index++) {\n      if (listDepartment[index].name == v_Department_ID) {\n        var depID = listDepartment[index].id;\n      }\n    }\n    // lay ra ID cuar POssition de nguoi dung lua chon phong ban\n    for (let index = 0; index < listPossition.length; index++) {\n      if (listPossition[index].name == v_Position_ID) {\n        var posID = listPossition[index].id;\n      }\n    }\n     */\n\n    if (!v_Fullname_ID || v_Fullname_ID.length < 6 || v_Fullname_ID.length > 50) {\n      // show error message\n      alert(\"Fullname name must be from 6 to 50 characters!\");\n      return false;\n    }\n\n    var v_Cretate_Date_ID = $(\"#Cretate_Date_ID\").val();\n    var account = {\n      //AccountID: v_ID_ID,\n      // Email: v_Email_ID,\n      // Username: v_Username_ID,\n      fullname: v_Fullname_ID,\n      departmentId: v_Department_ID,\n      // phải giống trong form nhận về\n      positionId: v_Position_ID // CreateDate: v_Cretate_Date_ID,\n\n    };\n    console.log(v_Department_ID);\n    console.log(JSON.stringify(account));\n    console.log(v_ID_ID);\n    console.log(\"http://localhost:8080/api/v1/accounts/\" + v_ID_ID);\n    $.ajax({\n      url: \"http://localhost:8080/api/v1/accounts/\" + v_ID_ID,\n      type: \"PUT\",\n      contentType: \"application/json\",\n      data: JSON.stringify(account),\n      // body// type of body (json, xml, text)\n      beforeSend: function (xhr) {\n        xhr.setRequestHeader(\"Authorization\", \"Basic \" + btoa(localStorage.getItem(\"USERNAME\") + \":\" + localStorage.getItem(\"PASSWORD\")));\n      },\n      // dataType: 'json', // datatype return\n      success: function (data, textStatus, xhr) {\n        window.location.reload();\n      },\n\n      error(jqXHR, textStatus, errorThrown) {\n        alert(\"Error when loading data\");\n        console.log(JSON.stringify(jqXHR));\n        console.log(textStatus);\n        console.log(errorThrown);\n      }\n\n    });\n  });\n} // Viết hàm gọi dữ liệu server API bằng Ajax khi load trang Web\n// hàm chuyển dữ liệu API nhận được bằng Ajax chuyển về dạng List để sử dụng trong chương trình\n\n\nfunction parseData(data) {\n  // employees = data;\n  data.content.forEach(function (item) {\n    var account = {\n      AccountID: item.id,\n      Email: item.email,\n      Username: item.username,\n      // sai , ko trùng với dl lấy về\n      FullName: item.fullname,\n      Department: item.department,\n      Position: item.position,\n      CreateDate: item.createDate\n    };\n    listAccount.push(account);\n  });\n} // viet ham cho getlistDepartment\n\n\nfunction getListDepartment() {\n  // c thừa dấu { ở dưới này\n  // $.get(\"http://localhost:8080/api/v1/departments\", function (data, status) {\n  //  listDepartment = [];\n  //   if (status == \"error\") {\n  //     alert(\"Error when loading data\");\n  //    return;\n  //  }\n  //  data.forEach(function (item) {\n  //   var department = {\n  //     id: item.id,\n  //     name: item.name,\n  //   };\n  //    listDepartment.push(department);\n  //  });\n  //  for (let index = 0; index < listDepartment.length; index++) {\n  //    $(\"#Department_ID\").append(`\n  //                   <option value=\"${listDepartment[index].id}\">${listDepartment[index].name}</option>\n  //                    `);\n  //   }\n  // });\n  //}\n  $.ajax({\n    url: \"http://localhost:8080/api/v1/departments/\",\n    type: \"GET\",\n    contentType: \"application/json\",\n    dataType: \"json\",\n    // datatype return\n    beforeSend: function (xhr) {\n      xhr.setRequestHeader(\"Authorization\", \"Basic \" + btoa(localStorage.getItem(\"USERNAME\") + \":\" + localStorage.getItem(\"PASSWORD\")));\n    },\n    success: function (data, textStatus, xhr) {\n      // Đoạn lệnh này copy từ phần gọi Ajax theo cách không xác thực commemt bên trên xuống.\n      data.forEach(function (item) {\n        var department = {\n          id: item.id,\n          name: item.name\n        };\n        listDepartment.push(department);\n      });\n\n      for (let index = 0; index < listDepartment.length; index++) {\n        $(\"#Department_ID\").append(`\n        <option value=\"${listDepartment[index].id}\">${listDepartment[index].name}</option>\n          `);\n      }\n    },\n\n    error(jqXHR, textStatus, errorThrown) {\n      console.log(jqXHR);\n      console.log(textStatus);\n      console.log(errorThrown);\n    }\n\n  });\n} // getlistPossition\n\n\nfunction getListPossition() {\n  //$.get(\"http://localhost:8080/api/v1/possitions\", function (data, status) {\n  // type: \"GET\", (listPossition = []);\n  //  if (status == \"error\") {\n  //    alert(\"Error when loading data\");\n  //    return;\n  //  }\n  //  data.forEach((item) => {\n  //    var possition = {\n  //     id: item.id,\n  //      name: item.name,\n  //    };\n  //   listPossition.push(possition);\n  // });\n  // for (let index = 0; index < listPossition.length; index++) {\n  //   $(\"#Position_ID\").append(`\n  //                     <option value=\"${listPossition[index].id}\">${listPossition[index].name}</option>\n  //                     `);\n  //  } // thêm value trong thẻ option như này nha c\n  //});\n  //}\n  $.ajax({\n    url: \"http://localhost:8080/api/v1/possitions/\",\n    type: \"GET\",\n    contentType: \"application/json\",\n    dataType: \"json\",\n    // datatype return\n    beforeSend: function (xhr) {\n      xhr.setRequestHeader(\"Authorization\", \"Basic \" + btoa(localStorage.getItem(\"USERNAME\") + \":\" + localStorage.getItem(\"PASSWORD\")));\n    },\n    success: function (data, textStatus, xhr) {\n      // Đoạn lệnh này copy từ phần gọi Ajax theo cách không xac thực commemt bên trên xuống.\n      data.forEach(function (item) {\n        var possition = {\n          id: item.id,\n          name: item.name\n        };\n        listPossition.push(possition);\n      });\n\n      for (let index = 0; index < listPossition.length; index++) {\n        $(\"#Position_ID\").append(`\n        <option value=\"${listPossition[index].id}\">${listPossition[index].name}</option>\n          `);\n      }\n    },\n\n    error(jqXHR, textStatus, errorThrown) {\n      console.log(jqXHR);\n      console.log(textStatus);\n      console.log(errorThrown);\n    }\n\n  });\n} // Nhóm hàm xử lý phân trang\n// Hàm Gen ra các icon dùng trong phân trang\n\n\nfunction pagingTable(pageAmount) {\n  var pagingStr = \"\"; // Hàm Gen nút Previous\n\n  if (pageAmount > 1 && currentPage > 1) {\n    pagingStr += '<li class=\"page-item\">' + '<a class=\"page-link\" onClick=\"prevPaging()\">Previous</a>' + \"</li>\";\n  } // Hàm Gen nút số trang 1,2,3 ...\n\n\n  for (i = 0; i < pageAmount; i++) {\n    pagingStr += '<li class=\"page-item ' + (currentPage == i + 1 ? \"active\" : \"\") + '\">' + '<a class=\"page-link\" onClick=\"changePage(' + (i + 1) + ')\">' + (i + 1) + \"</a>\" + \"</li>\";\n  } // Hàm Gen nút Next\n\n\n  if (pageAmount > 1 && currentPage < pageAmount) {\n    pagingStr += '<li class=\"page-item\">' + '<a class=\"page-link\" onClick=\"nextPaging()\">Next</a>' + \"</li>\";\n  }\n\n  $(\"#pagination\").empty();\n  $(\"#pagination\").append(pagingStr);\n} // Hàm thực hiện khi nhấn vào các nút phân trang 1, 2, 3\n\n\nfunction changePage(page) {\n  if (page == currentPage) {\n    return;\n  }\n\n  currentPage = page;\n  getListEmployees();\n} // Hàm reset về trang mặc định, trang đầu tiên 1. Sử dụng khi xóa dữ liệu\n\n\nfunction resetPaging() {\n  currentPage = 1;\n  size = 5;\n} // Hàm xử lý khi nhấn nút Previous\n\n\nfunction prevPaging() {\n  changePage(currentPage - 1);\n} // Hàm xử lý khi nhấn nút next\n\n\nfunction nextPaging() {\n  changePage(currentPage + 1);\n} // xu ly sort du lieu\n\n\nfunction changeSort(field) {\n  if (field == sortField) {\n    isAsc = !isAsc;\n  } else {\n    sortField = field;\n    isAsc = true;\n  }\n\n  getListEmployees();\n} // ham xu ly chuc nang search\n\n\nfunction handleSearch() {\n  getListEmployees();\n} // nhom ham xu ly login\n\n\nfunction loginSuccess() {\n  // Get username & password\n  var username = $(\"#Email_Login_id\").val();\n  var password = $(\"#Password_Login_id\").val(); // Call API\n\n  $.ajax({\n    url: \"http://localhost:8080/api/v1/login\",\n    type: \"GET\",\n    contentType: \"application/json\",\n    dataType: \"json\",\n    // datatype return\n    beforeSend: function (xhr) {\n      xhr.setRequestHeader(\"Authorization\", \"Basic \" + btoa(username + \":\" + password));\n    },\n    success: function (data, textStatus, xhr) {\n      // save data to storage\n      // https://www.w3schools.com/html/html5_webstorage.asp\n      localStorage.setItem(\"ID\", data.id);\n      localStorage.setItem(\"FULL_NAME\", data.fullName);\n      localStorage.setItem(\"USERNAME\", username);\n      localStorage.setItem(\"PASSWORD\", password); // redirect to home page\n      // https://www.w3schools.com/howto/howto_js_redirect_webpage.asp\n\n      window.location.replace(\"QLNV.html\");\n    },\n\n    error(jqXHR, textStatus, errorThrown) {\n      if (jqXHR.status == 401) {\n        alert(\"Kiểm tra lại thông tin!!\");\n      } else {\n        console.log(jqXHR);\n        console.log(textStatus);\n        console.log(errorThrown);\n      }\n    }\n\n  });\n}","map":{"version":3,"sources":["/Users/tranhienluong20189gmail.com/Documents/ReactJS/Lab2_DemoQLNV/myapp/src/QLNV_Scrip.js"],"names":["listAccount","listDepartment","listPossition","currentPage","size","totalPages","sortField","isAsc","getListEmployees","url","search","$","val","ajax","type","contentType","dataType","beforeSend","xhr","setRequestHeader","btoa","localStorage","getItem","success","data","textStatus","parseData","showAccount","pagingTable","error","jqXHR","errorThrown","console","log","getListDepartment","getListPossition","attr","click","submit","v_ID_ID","v_Email_ID","v_Username_ID","v_Fullname_ID","v_Department_ID","v_Position_ID","length","alert","account","email","username","fullname","departmentId","positionId","JSON","stringify","removeAttr","empty","index","append","AccountID","Email","Username","FullName","Department","Position","CreateDate","deleteAccount","Index","v_del_ID","confirm_del","confirm","window","location","reload","editAccount","v_Cretate_Date_ID","content","forEach","item","id","department","position","createDate","push","name","possition","pageAmount","pagingStr","i","changePage","page","resetPaging","prevPaging","nextPaging","changeSort","field","handleSearch","loginSuccess","password","setItem","fullName","replace","status"],"mappings":"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","sourcesContent":["// Trong bài tập này sẽ xử dụng Jquery và JavaScript, JavaScript để thực hiện chức năng quản lý nhân viên, tương ứng với bảng Account trong DB TestingSystem, Các chức năng: Thêm, Sửa, Xóa. Dữ liệu này sẽ tương tác với server Backend API.\n// Khai báo 1 array để lưu thông tin tất cả các Account trên hệ thống.\nvar listAccount = [];\nvar listDepartment = [];\nvar listPossition = [];\n\nvar currentPage = 1;\nvar size = 5;\n\nvar totalPages;\n\nvar sortField = \"id\";\nvar isAsc = true;\n\nfunction getListEmployees() {\n  var url = \"http://localhost:8080/api/v1/accounts/\";\n\n  url += \"?page=\" + currentPage + \"&size=\" + size;\n\n  url += \"&sort=\" + sortField + \",\" + (isAsc ? \"asc\" : \"desc\");\n\n  var search = $(\"#input-search-department\").val();\n  if (search) {\n    url += \"&search=\" + search;\n  }\n  $.ajax({\n    url: url,\n    type: \"GET\",\n    contentType: \"application/json\",\n    dataType: \"json\", // datatype return\n    beforeSend: function (xhr) {\n      xhr.setRequestHeader(\n        \"Authorization\",\n        \"Basic \" +\n          btoa(\n            localStorage.getItem(\"USERNAME\") +\n              \":\" +\n              localStorage.getItem(\"PASSWORD\")\n          )\n      );\n    },\n    success: function (data, textStatus, xhr) {\n      // reset list employees\n      listAccount = [];\n      parseData(data);\n      showAccount();\n      totalPages = data.totalPages;\n      // Sau khi hiển thị dữ liệu sẽ Show thêm các nút để thực hiện phân trang, tính các nút này dựa trên API totalPages được trả ra\n      pagingTable(totalPages);\n    },\n    error(jqXHR, textStatus, errorThrown) {\n      console.log(jqXHR);\n      console.log(textStatus);\n      console.log(errorThrown);\n    },\n  });\n}\n\n$(function () {\n  // Gọi hàm load dữ liệu từ Server API khi load trang\n  getListEmployees();\n  getListDepartment();\n  getListPossition();\n  // Hàm thực thi khi load đầy đủ các thành phần html\n  $(\"#Cretate_Date_ID\").attr(\"disabled\", \"disabled\");\n  $(\"#ID_ID\").attr(\"disabled\", \"disabled\");\n\n  // Xử lý sự kiện cho nút reset, Sử dụng JQuery để lấy các giá trị các trường theo ID, sau đó Set về rỗng\n\n  $(\"#reset_btn\").click(function () {\n    $(\"#ID_ID\").val(\"\");\n    $(\"#Email_ID\").val(\"\");\n    $(\"#Username_ID\").val(\"\");\n    $(\"#Fullname_ID\").val(\"\");\n    $(\"#Department_ID\").val(\"\");\n    $(\"#Position_ID\").val(\"\");\n    $(\"#Cretate_Date_ID\").val(\"\");\n  });\n\n  // Xử lý sự kiện khi nhấn nút Save\n  $(\"#Main_Form_ID\").submit(function () {\n    // Xử lý sự kiện khi nhấn nút Submit của Form(Save), ở đây phải sử dụng Return False ở cuối sự kiện này để không redirect sang trang mới.\n    // Lấy các giá trị người dùng nhập vào\n    var v_ID_ID = $(\"#ID_ID\").val();\n    var v_Email_ID = $(\"#Email_ID\").val();\n    var v_Username_ID = $(\"#Username_ID\").val();\n    var v_Fullname_ID = $(\"#Fullname_ID\").val();\n    var v_Department_ID = $(\"#Department_ID\").val(); // lấy id sẵn rồi\n    var v_Position_ID = $(\"#Position_ID\").val();\n\n    // Validate cho các giá trị nhập vào gôm: Email, Username, Fullnaem. Department, Possition\n    if (!v_Email_ID || v_Email_ID.length < 6 || v_Email_ID.length > 50) {\n      // show error message\n      alert(\"Email name must be from 6 to 50 characters!\");\n      return false;\n    }\n    if (\n      !v_Username_ID ||\n      v_Username_ID.length < 6 ||\n      v_Username_ID.length > 50\n    ) {\n      // show error message\n      alert(\"Username name must be from 6 to 50 characters!\");\n      return false;\n    }\n    if (\n      !v_Fullname_ID ||\n      v_Fullname_ID.length < 6 ||\n      v_Fullname_ID.length > 50\n    ) {\n      // show error message\n      alert(\"Fullname name must be from 6 to 50 characters!\");\n      return false;\n    }\n    if (!v_Department_ID || v_Department_ID == \"--Select a Department--\") {\n      // show error message\n      alert(\"Pls choose Department!\");\n      return false;\n    }\n    if (!v_Position_ID || v_Position_ID == \"--Select a Position--\") {\n      // show error message\n      alert(\"Pls choose Possition!\");\n      return false;\n    }\n\n    //var v_Cretate_Date_ID = $(\"#Cretate_Date_ID\").val();\n    // sua lai chuc nang tao moi Account\n\n    // themthuoocj tính value rồi, khong cần đoạn này\n    // -> dùng luôn v_postion_id chứ không cần duyệt mảng tìm lại id\n\n    /*\n    for (let index = 0; index < listDepartment.length; index++) {\n      if (listDepartment[index].name == v_Department_ID) {\n        var depID = listDepartment[index].id;\n      }\n    }\n    for (let index = 0; index < listPossition.length; index++) {\n      if (listPossition[index].name == v_Position_ID) {\n        var posID = listPossition[index].id;\n      }\n    }\n    */\n    var account = {\n      email: v_Email_ID,\n      username: v_Username_ID, //\n      fullname: v_Fullname_ID,\n      departmentId: v_Department_ID,\n      positionId: v_Position_ID,\n      //CreateDate: v_Cretate_Date_ID,\n    };\n    // check Email da ton tai tren he thong hay chua?\n    $.ajax({\n      url: \"http://localhost:8080/api/v1/accounts/EmailExists/\" + v_Email_ID,\n      type: \"GET\",\n      contentType: \"application/json\",\n      dataType: \"json\", // datatype return\n      beforeSend: function (xhr) {\n        xhr.setRequestHeader(\n          \"Authorization\",\n          \"Basic \" +\n            btoa(\n              localStorage.getItem(\"USERNAME\") +\n                \":\" +\n                localStorage.getItem(\"PASSWORD\")\n            )\n        );\n      },\n      success: function (data, textStatus, xhr) {\n        if (data) {\n          alert(\"Email đã tồn tại trên hệ thống\");\n          return false;\n        } else {\n          //\n          // Check Username đã có trên hệ thống hay chưa?\n          $.ajax({\n            url:\n              \"http://localhost:8080/api/v1/accounts/UsernameExists/\" +\n              v_Username_ID,\n            type: \"GET\",\n            contentType: \"application/json\",\n            dataType: \"json\", // datatype return\n            beforeSend: function (xhr) {\n              xhr.setRequestHeader(\n                \"Authorization\",\n                \"Basic \" +\n                  btoa(\n                    localStorage.getItem(\"USERNAME\") +\n                      \":\" +\n                      localStorage.getItem(\"PASSWORD\")\n                  )\n              );\n            },\n            success: function (data, textStatus, xhr) {\n              if (data) {\n                alert(\"Username đã tồn tại trên hệ thống\");\n                return false;\n              } else {\n                // add Account voi Mock API\n                console.log(v_Department_ID);\n                console.log(JSON.stringify(account));\n\n                console.log(v_ID_ID);\n                console.log(\"http://localhost:8080/api/v1/accounts/\" + v_ID_ID);\n                $.ajax({\n                  url: \"http://localhost:8080/api/v1/accounts/\",\n                  type: \"POST\",\n                  data: JSON.stringify(account), // body\n                  contentType: \"application/json\", // type of body (json, xml, text)\n                  beforeSend: function (xhr) {\n                    xhr.setRequestHeader(\n                      \"Authorization\",\n                      \"Basic \" +\n                        btoa(\n                          localStorage.getItem(\"USERNAME\") +\n                            \":\" +\n                            localStorage.getItem(\"PASSWORD\")\n                        )\n                    );\n                  },\n                  success: function (data, textStatus, xhr) {\n                    currentPage = totalPages;\n                    getListEmployees();\n                  },\n                  error(jqXHR, textStatus, errorThrown) {\n                    alert(\"Error when loading data\");\n                    console.log(jqXHR);\n                    console.log(textStatus);\n                    console.log(errorThrown);\n                  },\n                });\n              }\n            },\n            error(jqXHR, textStatus, errorThrown) {\n              console.log(jqXHR);\n              console.log(textStatus);\n              console.log(errorThrown);\n            },\n          });\n        }\n      },\n      error(jqXHR, textStatus, errorThrown) {\n        console.log(jqXHR);\n        console.log(textStatus);\n        console.log(errorThrown);\n      },\n    });\n\n    // Tạo 1 đối tượng account để lưu giữ thông tin nhận được, bỏ giá trị ID vì đã nhận giá trị tự động tăng từ Server\n\n    // console.log(account);\n    // Add account tới MOCK API\n    //$.ajax({\n    // type: \"POST\",\n    // url: \"http://localhost:8080/api/v1/accounts/\",\n    // data: JSON.stringify(account),\n    // contentType: \"application/json; charset=UTF-8\",\n    //success: function (data, status) {\n    // console.log(status);\n    // error\n    // if (status == \"error\") {\n    //    alert(\"Error when loading data\");\n    //   return;\n    //  }\n    // success\n    // Hàm này để hiển thị thông tin account ở table\n    //   getListEmployees();\n    // },\n    // });\n\n    return false;\n    // Sử dụng return false để không redirect tới 1 trang khác.\n  });\n});\n// Đoạn bên trên khi load hoàn chỉnh trang web sẽ kết thúc ở đây, đoạn dưới sẽ viết các hàm bổ trợ khác\n// Viết hàm showAccount()\nfunction showAccount() {\n  // thừa 1 chữ r : removeAttrr -> removeAttr\n  $(\"#Email_ID\").removeAttr(\"disabled\");\n  $(\"#Username_ID\").removeAttr(\"disabled\");\n  // Xóa hết kết quả đang hiển thị ở bảng kết quả\n\n  $(\"#Result_TB\").empty();\n  // Lặp trong listAccount để in thông tin từng phần tử\n  // Hiển thị thêm 2 nút để sửa và xóa các Account\n  for (var index = 0; index < listAccount.length; index++) {\n    $(\"#Result_TB\").append(`\n              <tr>\n              <th>${listAccount[index].AccountID}</th>\n              <th>${listAccount[index].Email}</th>\n              <th>${listAccount[index].Username}</th>\n              <th>${listAccount[index].FullName}</th>\n              <th>${listAccount[index].Department}</th>\n              <th>${listAccount[index].Position}</th>   \n              <th>${listAccount[index].CreateDate}</th>\n              <th><button class=\"btn btn-warning\" onclick=\"editAccount(${index})\">Edit</button></th>\n              <th><button class=\"btn btn-warning\" onclick=\"deleteAccount(${index})\">Delete</button></th>\n              </tr>\n              `);\n  }\n}\n// Viết hàm xóa account\nfunction deleteAccount(Index) {\n  var v_del_ID = listAccount[Index].AccountID;\n  console.log(v_del_ID);\n  // Hiển thị 1 Confim Popup, chọn Có = True\n  var confirm_del = confirm(\"Bạn có chắc chắn muốn xóa Account này không\");\n  if (confirm_del) {\n    $.ajax({\n      url: \"http://localhost:8080/api/v1/accounts/\" + v_del_ID,\n      type: \"DELETE\",\n      beforeSend: function (xhr) {\n        xhr.setRequestHeader(\n          \"Authorization\",\n          \"Basic \" +\n            btoa(\n              localStorage.getItem(\"USERNAME\") +\n                \":\" +\n                localStorage.getItem(\"PASSWORD\")\n            )\n        );\n      },\n      success: function (data) {\n        window.location.reload();\n      },\n      error(jqXHR, textStatus, errorThrown) {\n        console.log(jqXHR);\n        console.log(textStatus);\n        console.log(errorThrown);\n      },\n    });\n  } else {\n    return;\n  }\n}\n// Viết hàm để Edit các account\nfunction editAccount(Index) {\n  $(\"#ID_ID\").val(listAccount[Index].AccountID);\n\n  $(\"#Email_ID\").attr(\"disabled\", \"disabled\");\n\n  $(\"#Username_ID\").val(listAccount[Index].Username); // index -> Index\n\n  $(\"#Fullname_ID\").val(listAccount[Index].FullName);\n  $(\"#Department_ID\").val(listAccount[Index].Department);\n  $(\"#Position_ID\").val(listAccount[Index].Position);\n  $(\"#Cretate_Date_ID\").attr(\"disabled\", \"disabled\");\n\n  //  Xử lý sự kiện khi click vào nút Update\n  $(\"#update_btn\").click(function () {\n    var v_ID_ID = $(\"#ID_ID\").val();\n    // var v_Email_ID = $(\"#Email_ID\").val();\n    //var v_Username_ID = $(\"#Username_ID\").val();\n    var v_Fullname_ID = $(\"#Fullname_ID\").val();\n    // var v_Fullname_ID = $(\"#Fullname_ID\").val(); //thưuaf\n\n    // lấy id luôn rồi -- (là thuộc tính value trong thẻ option)\n    var v_Department_ID = $(\"#Department_ID\").val();\n    var v_Position_ID = $(\"#Position_ID\").val();\n\n    // lay  ra  ID  của  Department khi nguoi dung lua chon phong ban\n\n    // có thuộc tính value rồi, không cần đoạn này\n    /*\n    for (let index = 0; index < listDepartment.length; index++) {\n      if (listDepartment[index].name == v_Department_ID) {\n        var depID = listDepartment[index].id;\n      }\n    }\n    // lay ra ID cuar POssition de nguoi dung lua chon phong ban\n    for (let index = 0; index < listPossition.length; index++) {\n      if (listPossition[index].name == v_Position_ID) {\n        var posID = listPossition[index].id;\n      }\n    }\n\n    */\n    if (\n      !v_Fullname_ID ||\n      v_Fullname_ID.length < 6 ||\n      v_Fullname_ID.length > 50\n    ) {\n      // show error message\n      alert(\"Fullname name must be from 6 to 50 characters!\");\n      return false;\n    }\n\n    var v_Cretate_Date_ID = $(\"#Cretate_Date_ID\").val();\n\n    var account = {\n      //AccountID: v_ID_ID,\n      // Email: v_Email_ID,\n      // Username: v_Username_ID,\n      fullname: v_Fullname_ID,\n      departmentId: v_Department_ID, // phải giống trong form nhận về\n      positionId: v_Position_ID,\n      // CreateDate: v_Cretate_Date_ID,\n    };\n    console.log(v_Department_ID);\n    console.log(JSON.stringify(account));\n\n    console.log(v_ID_ID);\n    console.log(\"http://localhost:8080/api/v1/accounts/\" + v_ID_ID);\n    $.ajax({\n      url: \"http://localhost:8080/api/v1/accounts/\" + v_ID_ID,\n      type: \"PUT\",\n      contentType: \"application/json\",\n      data: JSON.stringify(account), // body// type of body (json, xml, text)\n      beforeSend: function (xhr) {\n        xhr.setRequestHeader(\n          \"Authorization\",\n          \"Basic \" +\n            btoa(\n              localStorage.getItem(\"USERNAME\") +\n                \":\" +\n                localStorage.getItem(\"PASSWORD\")\n            )\n        );\n      },\n      // dataType: 'json', // datatype return\n      success: function (data, textStatus, xhr) {\n        window.location.reload();\n      },\n      error(jqXHR, textStatus, errorThrown) {\n        alert(\"Error when loading data\");\n        console.log(JSON.stringify(jqXHR));\n        console.log(textStatus);\n        console.log(errorThrown);\n      },\n    });\n  });\n}\n\n// Viết hàm gọi dữ liệu server API bằng Ajax khi load trang Web\n// hàm chuyển dữ liệu API nhận được bằng Ajax chuyển về dạng List để sử dụng trong chương trình\nfunction parseData(data) {\n  // employees = data;\n  data.content.forEach(function (item) {\n    var account = {\n      AccountID: item.id,\n      Email: item.email,\n      Username: item.username, // sai , ko trùng với dl lấy về\n      FullName: item.fullname,\n      Department: item.department,\n      Position: item.position,\n      CreateDate: item.createDate,\n    };\n    listAccount.push(account);\n  });\n}\n// viet ham cho getlistDepartment\nfunction getListDepartment() {\n  // c thừa dấu { ở dưới này\n  // $.get(\"http://localhost:8080/api/v1/departments\", function (data, status) {\n  //  listDepartment = [];\n  //   if (status == \"error\") {\n  //     alert(\"Error when loading data\");\n  //    return;\n  //  }\n  //  data.forEach(function (item) {\n  //   var department = {\n  //     id: item.id,\n  //     name: item.name,\n  //   };\n\n  //    listDepartment.push(department);\n  //  });\n  //  for (let index = 0; index < listDepartment.length; index++) {\n  //    $(\"#Department_ID\").append(`\n  //                   <option value=\"${listDepartment[index].id}\">${listDepartment[index].name}</option>\n  //                    `);\n  //   }\n  // });\n  //}\n  $.ajax({\n    url: \"http://localhost:8080/api/v1/departments/\",\n    type: \"GET\",\n    contentType: \"application/json\",\n    dataType: \"json\", // datatype return\n    beforeSend: function (xhr) {\n      xhr.setRequestHeader(\n        \"Authorization\",\n        \"Basic \" +\n          btoa(\n            localStorage.getItem(\"USERNAME\") +\n              \":\" +\n              localStorage.getItem(\"PASSWORD\")\n          )\n      );\n    },\n    success: function (data, textStatus, xhr) {\n      // Đoạn lệnh này copy từ phần gọi Ajax theo cách không xác thực commemt bên trên xuống.\n      data.forEach(function (item) {\n        var department = {\n          id: item.id,\n          name: item.name,\n        };\n        listDepartment.push(department);\n      });\n      for (let index = 0; index < listDepartment.length; index++) {\n        $(\"#Department_ID\").append(`\n        <option value=\"${listDepartment[index].id}\">${listDepartment[index].name}</option>\n          `);\n      }\n    },\n    error(jqXHR, textStatus, errorThrown) {\n      console.log(jqXHR);\n      console.log(textStatus);\n      console.log(errorThrown);\n    },\n  });\n}\n\n// getlistPossition\nfunction getListPossition() {\n  //$.get(\"http://localhost:8080/api/v1/possitions\", function (data, status) {\n  // type: \"GET\", (listPossition = []);\n  //  if (status == \"error\") {\n  //    alert(\"Error when loading data\");\n  //    return;\n  //  }\n  //  data.forEach((item) => {\n  //    var possition = {\n  //     id: item.id,\n  //      name: item.name,\n  //    };\n  //   listPossition.push(possition);\n  // });\n  // for (let index = 0; index < listPossition.length; index++) {\n  //   $(\"#Position_ID\").append(`\n  //                     <option value=\"${listPossition[index].id}\">${listPossition[index].name}</option>\n  //                     `);\n  //  } // thêm value trong thẻ option như này nha c\n  //});\n  //}\n  $.ajax({\n    url: \"http://localhost:8080/api/v1/possitions/\",\n    type: \"GET\",\n    contentType: \"application/json\",\n    dataType: \"json\", // datatype return\n    beforeSend: function (xhr) {\n      xhr.setRequestHeader(\n        \"Authorization\",\n        \"Basic \" +\n          btoa(\n            localStorage.getItem(\"USERNAME\") +\n              \":\" +\n              localStorage.getItem(\"PASSWORD\")\n          )\n      );\n    },\n    success: function (data, textStatus, xhr) {\n      // Đoạn lệnh này copy từ phần gọi Ajax theo cách không xac thực commemt bên trên xuống.\n      data.forEach(function (item) {\n        var possition = {\n          id: item.id,\n          name: item.name,\n        };\n        listPossition.push(possition);\n      });\n      for (let index = 0; index < listPossition.length; index++) {\n        $(\"#Position_ID\").append(`\n        <option value=\"${listPossition[index].id}\">${listPossition[index].name}</option>\n          `);\n      }\n    },\n    error(jqXHR, textStatus, errorThrown) {\n      console.log(jqXHR);\n      console.log(textStatus);\n      console.log(errorThrown);\n    },\n  });\n}\n// Nhóm hàm xử lý phân trang\n// Hàm Gen ra các icon dùng trong phân trang\nfunction pagingTable(pageAmount) {\n  var pagingStr = \"\";\n  // Hàm Gen nút Previous\n  if (pageAmount > 1 && currentPage > 1) {\n    pagingStr +=\n      '<li class=\"page-item\">' +\n      '<a class=\"page-link\" onClick=\"prevPaging()\">Previous</a>' +\n      \"</li>\";\n  }\n  // Hàm Gen nút số trang 1,2,3 ...\n  for (i = 0; i < pageAmount; i++) {\n    pagingStr +=\n      '<li class=\"page-item ' +\n      (currentPage == i + 1 ? \"active\" : \"\") +\n      '\">' +\n      '<a class=\"page-link\" onClick=\"changePage(' +\n      (i + 1) +\n      ')\">' +\n      (i + 1) +\n      \"</a>\" +\n      \"</li>\";\n  }\n  // Hàm Gen nút Next\n  if (pageAmount > 1 && currentPage < pageAmount) {\n    pagingStr +=\n      '<li class=\"page-item\">' +\n      '<a class=\"page-link\" onClick=\"nextPaging()\">Next</a>' +\n      \"</li>\";\n  }\n\n  $(\"#pagination\").empty();\n  $(\"#pagination\").append(pagingStr);\n}\n\n// Hàm thực hiện khi nhấn vào các nút phân trang 1, 2, 3\nfunction changePage(page) {\n  if (page == currentPage) {\n    return;\n  }\n  currentPage = page;\n  getListEmployees();\n}\n// Hàm reset về trang mặc định, trang đầu tiên 1. Sử dụng khi xóa dữ liệu\nfunction resetPaging() {\n  currentPage = 1;\n  size = 5;\n}\n// Hàm xử lý khi nhấn nút Previous\nfunction prevPaging() {\n  changePage(currentPage - 1);\n}\n// Hàm xử lý khi nhấn nút next\nfunction nextPaging() {\n  changePage(currentPage + 1);\n}\n// xu ly sort du lieu\nfunction changeSort(field) {\n  if (field == sortField) {\n    isAsc = !isAsc;\n  } else {\n    sortField = field;\n    isAsc = true;\n  }\n  getListEmployees();\n}\n// ham xu ly chuc nang search\nfunction handleSearch() {\n  getListEmployees();\n}\n// nhom ham xu ly login\nfunction loginSuccess() {\n  // Get username & password\n  var username = $(\"#Email_Login_id\").val();\n  var password = $(\"#Password_Login_id\").val();\n\n  // Call API\n  $.ajax({\n    url: \"http://localhost:8080/api/v1/login\",\n    type: \"GET\",\n    contentType: \"application/json\",\n    dataType: \"json\", // datatype return\n    beforeSend: function (xhr) {\n      xhr.setRequestHeader(\n        \"Authorization\",\n        \"Basic \" + btoa(username + \":\" + password)\n      );\n    },\n    success: function (data, textStatus, xhr) {\n      // save data to storage\n      // https://www.w3schools.com/html/html5_webstorage.asp\n      localStorage.setItem(\"ID\", data.id);\n      localStorage.setItem(\"FULL_NAME\", data.fullName);\n      localStorage.setItem(\"USERNAME\", username);\n      localStorage.setItem(\"PASSWORD\", password);\n\n      // redirect to home page\n      // https://www.w3schools.com/howto/howto_js_redirect_webpage.asp\n      window.location.replace(\"QLNV.html\");\n    },\n    error(jqXHR, textStatus, errorThrown) {\n      if (jqXHR.status == 401) {\n        alert(\"Kiểm tra lại thông tin!!\");\n      } else {\n        console.log(jqXHR);\n        console.log(textStatus);\n        console.log(errorThrown);\n      }\n    },\n  });\n}\n"]},"metadata":{},"sourceType":"module"}